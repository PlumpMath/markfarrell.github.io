<?xml version="1.0" encoding="utf-8"?><?xml-stylesheet type="text/xml" href="http://localhost:4000/feed.xslt.xml"?><feed xmlns="http://www.w3.org/2005/Atom"><generator uri="http://jekyllrb.com" version="3.3.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2016-12-17T11:41:11-05:00</updated><id>http://localhost:4000//</id><title type="html">Mark Farrell</title><entry><title type="html">Examples of Walk-Regular Graphs</title><link href="http://localhost:4000/2016/12/17/examples-of-walk-regular-graphs.html" rel="alternate" type="text/html" title="Examples of Walk-Regular Graphs" /><published>2016-12-17T00:00:00-05:00</published><updated>2016-12-17T00:00:00-05:00</updated><id>http://localhost:4000/2016/12/17/examples-of-walk-regular-graphs</id><content type="html" xml:base="http://localhost:4000/2016/12/17/examples-of-walk-regular-graphs.html">&lt;p&gt;A walk-regular graph is a simple graph whose vertices are all cospectral, which is characterized in terms of graph theory by the simple graphs where the number of closed walks of any length from a vertex to itself on said kind of simple graph is independent of the choice of vertex. Walk-regular graphs are interesting because they are a class of simple graphs that contain both the vertex-transitive graphs and distance-regular graphs - two relatively familiar examples of important classes of simple graphs in the context of algebraic graph theory. Not only do walk-regular graphs contain the vertex-transitive graphs and distance-regular graphs, but the class of walk-regular graphs also enjoys a number of arguably nice formal properties: e.g. complements of walk-regular graphs are again walk-regular, categorical products of walk-regular graphs are again walk-regular, Cartesian products of walk-regular graphs are again walk-regular, and so on. However, there doesn’t seem to be much concrete information available about walk-regular graphs themselves, despite the fact that the class of walk-regular graphs known to contain these two familiar classes of graphs and is also closed under a number of graph operations; in particular, there doesn’t seem to be much concrete information available about walk-regular graphs that are neither vertex-transitve nor distance-regular. In this post, I would like to provide some concrete examples of walk-regular graphs that I have found that are neither vertex-transitive nor distance-regular with the aid of computer - motivated by the high-level desire to gain a better intuition about what the class of walk-regular graphs looks like as a whole outside of these two familiar subclasses of graphs, and perhaps to potentially advance the theory of walk-regular graphs in general.&lt;/p&gt;

&lt;p&gt;With the aid of a computer, I found that the first examples of walk-regular graphs that are neither vertex-transitive nor distance-regular are given on 12 vertices. In particular, I found that there are 4 of them (up to isomorphism). Here are their &lt;a href=&quot;http://users.cecs.anu.edu.au/~bdm/data/formats.html&quot;&gt;Graph6&lt;/a&gt; codes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;KU`OXC`XKpHW&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;KCOfeqkfJkLg&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;KCpfJrs]lyRw&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;KCzbrj{{}}Vw&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;There appears to be no examples of walk-regular graphs that are neither vertex-transitive nor distance-regular on 13 or 14 vertices. The next example of a walk-regular graph that is neither vertex-transitive nor distance-regular appears to be given on 15 vertices. Here is its Graph6 code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;N]KOOHBO_GpH_KGQ?oW&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The first example of a walk-regular graph that is neither vertex-transitive nor distance-regular on 15 vertices that I have found appears to be the only quartic walk-regular graph of this kind on 15 vertices (up to isomorphism). However, I’ve currently yet to finish exhaustively searching for walk-regular graphs that are of valency 5 or greater on 15 vertices due to the apparent complexity of doing so; moreover I also haven’t finished exhaustively searching for walk-regular graphs of order greater than 15 due to running into the same apparent issues of complexity as well.&lt;/p&gt;

&lt;p&gt;None of the distinct examples of walk-regular graphs that are neither vertex-transitive nor distance-regular on 12 or 15 vertices that I initially found were cubic: aside from the one on 15 vertices being quartic, the ones on 12 vertices that I have listed are quartic, 5-regular, 6-regular, and 7-regular respectively. This raised the question of whether or not it is possible to construct a cubic walk-regular graph that is neither vertex-transitve nor distance-regular. Fortunately, with the help of some pre-computed data about cubic graphs available on Gordon Royle’s &lt;a href=&quot;http://staffhome.ecm.uwa.edu.au/~00013890/&quot;&gt;homepage&lt;/a&gt;, I believe that I been able to successfully find a first example on 20 vertices. Here its Graph6 code:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SsP@@?OC?S@C@_@C?K?A_?AG?D??C_??]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I think it would be interesting to continue to search for more distinct examples of walk-regular graphs that are neither vertex-transitive nor distance-regular on, say, up to 30 vertices. However, without thinking of more insightful or efficient ways of constructing walk-regular graphs of this kind or determining under what conditions they can exist, it may be difficulty to do so due to issues of complexity. I found that every one of the examples of walk-regular graphs that are neither vertex-transitive nor distance-regular presented here has an integral spectrum. I believe it is possible to take certain products of walk-regular graphs to construct a walk-regular graph that is neither vertex-transitve nor distance-regular on a larger number of vertices that does not have an integral spectrum. However, I find still find it odd that every one of the examples of that I have found so far, which I believe cannot be decomposed as a product of walk-regular graphs (with respect to the kinds of graph products that the class of walk-regular graphs is closed under), has had an integral spectrum. I’d wonder if it could possibly be true that walk-regular graphs that are neither vertex-transitive nor distance-regular will have an integral spectrum, assuming that they cannot be decomposed as a product of walk-regular graphs in this sense, or if something of that nature is true. Moreover, I’d wonder if it could be possibly be at least true that every cubic walk-regular graph that is neither vertex-transitive nor distance-regular has an integral spectrum, or if something of that nature is true as well. I think it would be useful to continue to search for more distinct examples of walk-regular graphs that are neither vertex-transitive nor distance-regular, and think of more systematic methods for constructing these kinds of examples, since e.g. there appears like there could still be more about the theory of walk-regular graphs still to be discovered.&lt;/p&gt;</content><summary type="html">A walk-regular graph is a simple graph whose vertices are all cospectral, which is characterized in terms of graph theory by the simple graphs where the number of closed walks of any length from a vertex to itself on said kind of simple graph is independent of the choice of vertex. Walk-regular graphs are interesting because they are a class of simple graphs that contain both the vertex-transitive graphs and distance-regular graphs - two relatively familiar examples of important classes of simple graphs in the context of algebraic graph theory. Not only do walk-regular graphs contain the vertex-transitive graphs and distance-regular graphs, but the class of walk-regular graphs also enjoys a number of arguably nice formal properties: e.g. complements of walk-regular graphs are again walk-regular, categorical products of walk-regular graphs are again walk-regular, Cartesian products of walk-regular graphs are again walk-regular, and so on. However, there doesn’t seem to be much concrete information available about walk-regular graphs themselves, despite the fact that the class of walk-regular graphs known to contain these two familiar classes of graphs and is also closed under a number of graph operations; in particular, there doesn’t seem to be much concrete information available about walk-regular graphs that are neither vertex-transitve nor distance-regular. In this post, I would like to provide some concrete examples of walk-regular graphs that I have found that are neither vertex-transitive nor distance-regular with the aid of computer - motivated by the high-level desire to gain a better intuition about what the class of walk-regular graphs looks like as a whole outside of these two familiar subclasses of graphs, and perhaps to potentially advance the theory of walk-regular graphs in general.</summary></entry><entry><title type="html">Closed Walks and Cospectral Graphs</title><link href="http://localhost:4000/2016/10/24/closed-walks-and-cospectral-graphs.html" rel="alternate" type="text/html" title="Closed Walks and Cospectral Graphs" /><published>2016-10-24T00:00:00-04:00</published><updated>2016-10-24T00:00:00-04:00</updated><id>http://localhost:4000/2016/10/24/closed-walks-and-cospectral-graphs</id><content type="html" xml:base="http://localhost:4000/2016/10/24/closed-walks-and-cospectral-graphs.html">&lt;p&gt;In this post, my goal is to verify that a pair of simple graphs are cospectral if and only if their respective generating series for all closed walks weighted by length are equal.&lt;/p&gt;

&lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is a simple graph with adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Then, first and foremost, I would like to give a couple of definitions in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The generating series closed walks on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; weighted by length is given by &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) := \sum\limits_{n=0}^{\infty} \operatorname{tr}(A^{n}) X^{n}&lt;/script&gt; - assuming, for the purposes of this post, the fact that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{tr}(A^{n})&lt;/script&gt; gives the total number of closed walks of length &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;n \geq 0&lt;/script&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that here &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) \in \mathbb{R}[[X]]&lt;/script&gt;, i.e. it is an element of the algebra of formal power series with real coefficients.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Suppose that the characteristic polynomial of the adjacency matrix of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(x)&lt;/script&gt;. Additionally, suppose that &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; is another simple graph where the characteristic polynomial of the adjacency matrix of &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;\phi_{H}(x)&lt;/script&gt;. Then &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are said to be cospectral if &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(x) = \phi_{H}(x)&lt;/script&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, in order to achieve my original goal for this post of verifying that a pair of simple graphs are cospectral if and only if their respective generating series for all closed walks weighted by length are equal, I would first like to necessarily propose that the following facts hold in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Suppose that minimal polynomial of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;p(x) = \prod\limits_{k = 1}^{n} \left (x - \lambda_k \right )&lt;/script&gt;. Additionally, suppose that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_\lambda&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; is the set whose elements consist of all of the roots of &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt;. Then the generating series &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X)&lt;/script&gt; for all closed walks on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; weighted by length admits the partial fraction decomposition &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) = \sum\limits_{\lambda \in \sigma(A)} \frac{\operatorname{tr}(E_{\lambda})}{1 - \lambda X}&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_\lambda&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; is the set whose elements consist of the distinct eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;\operatorname{tr}(E_\lambda) = m_{\lambda}&lt;/script&gt; gives the multiplicity &lt;script type=&quot;math/tex&quot;&gt;m_{\lambda}&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; as an eigenvalue of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Assuming that these facts hold in this context, then it is possible to then further deduce that the generating series &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X)&lt;/script&gt; for all closed walks on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; weighted by length admits a closed form as a rational expression involving the characteristic polynomial of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and its formal derivative relative to a certain formal symbol in context, which will be useful for achieving my original goal of verifying that a pair of simple graphs are cospectral if and only if their respective generating series for all closed walks weighted by length are equal:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Suppose that the closed walk generating series &lt;script type=&quot;math/tex&quot;&gt;W_G(X)&lt;/script&gt; of all closed walks on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; weighted by length admits the partial fraction decomposition &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) = \sum\limits_{\lambda \in \sigma(A)} \frac{m_{\lambda}}{1 - \lambda X}&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; is the set whose elements consist of distinct eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; and each &lt;script type=&quot;math/tex&quot;&gt;m_{\lambda}&lt;/script&gt; denotes the multiplicity of &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; as an eigenvalue of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;. Additionally, suppose that the characteristic polynomial &lt;script type=&quot;math/tex&quot;&gt;\phi(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;\phi(x) = \prod\limits_{\lambda \in \sigma(A)} \left ( x - \lambda \right )^{m_{\lambda}}&lt;/script&gt;. Then, we can further deduce from here that:&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;W_{G}(X)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \frac{m_{\lambda}}{1 - \lambda X}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \left ( \frac{X^{-1}}{X^{-1}} \right ) \frac{m_{\lambda}}{1 - \lambda X}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \frac{m_{\lambda} X^{-1}}{X^{-1} - \lambda}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X^{-1} \sum\limits_{\lambda \in \sigma(A)} \frac{m_{\lambda}}{X^{-1} - \lambda}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X^{-1} \sum\limits_{\lambda \in \sigma(A)}  \left ( \frac{ \left ( \frac{\phi(X^{-1})}{X^{-1} - \lambda} \right )}{ \left ( \frac{\phi(X^{-1})}{X^{-1} - \lambda} \right )} \right ) \frac{m_{\lambda}}{X^{-1} - \lambda}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X^{-1} \sum\limits_{\lambda \in \sigma(A)} \frac{m_{\lambda} \left ( \frac{\phi(X^{-1})}{X^{-1} - \lambda} \right )}{\phi(X^{-1})}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{X^{-1} \left ( \sum\limits_{\lambda \in \sigma(A)} m_{\lambda} \left ( \frac{\phi(X^{-1})}{X^{-1} - \lambda} \right ) \right )}{\phi(X^{-1})}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{X^{-1} \phi^{'}(X^{-1})}{\phi(X^{-1})}&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that here &lt;script type=&quot;math/tex&quot;&gt;X^{-1}&lt;/script&gt; denotes another formal symbol that happens to have the relation &lt;script type=&quot;math/tex&quot;&gt;X^{-1}X = 1&lt;/script&gt; with the formal symbol &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; and should not be interpreted as a “function of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt;” in the sense of calculus when e.g. considering the formal derivative &lt;script type=&quot;math/tex&quot;&gt;\phi^{'}(X^{-1})&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;\phi(X^{-1})&lt;/script&gt; with respect to the formal symbol &lt;script type=&quot;math/tex&quot;&gt;X^{-1}&lt;/script&gt; in context.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I would now like to show that the previous two facts that I assumed to be true indeed hold in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Consider the left-shift operator &lt;script type=&quot;math/tex&quot;&gt;T : \mathbb{R}[[X]] \to \mathbb{R}[[X]]&lt;/script&gt; acting on the algebra &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}[[X]]&lt;/script&gt; of formal power series with real coefficients, defined as &lt;script type=&quot;math/tex&quot;&gt;T \left ( \sum\limits_{n = 0}^{\infty} a_n X^{n} \right ) := \sum\limits_{n = 0}^{\infty} a_{n + 1} X^{n}&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{n = 0}^{\infty} a_n X^{n} \in \mathbb{R}[[X]]&lt;/script&gt;; I would like to assume, for the purposes of this post, that this operator is indeed linear and that &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}[[X]]&lt;/script&gt; can be interpreted as a vector space. Then, core linear algebra tells us that given the minimal polynomial &lt;script type=&quot;math/tex&quot;&gt;p(x) = \prod\limits_{k = 1}^{j} \left (x - \lambda_k \right )&lt;/script&gt; of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(p(T))&lt;/script&gt; admits the direct sum decomposition &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(p(T)) = \oplus_{k = 1}^{j} \operatorname{null}(T - \lambda_{k} I) = \oplus_{k = 1}^{j} \operatorname{span} \left \{ \frac{1}{1 - \lambda_k X} \right \}&lt;/script&gt;; I would also ask, for the purposes of this blog post, that you believe me that this fact from linear algebra is indeed true - and also the fact that a formal power series &lt;script type=&quot;math/tex&quot;&gt;A(X) \in \mathbb{R}[[X]]&lt;/script&gt; is an eigenvector for an eigenvalue &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;T&lt;/script&gt; if and only if &lt;script type=&quot;math/tex&quot;&gt;A(X)&lt;/script&gt; is a (non-zero) scalar multiple of &lt;script type=&quot;math/tex&quot;&gt;\frac{1}{1 - \lambda X}&lt;/script&gt;. Now, from linearity properties of the trace map &lt;script type=&quot;math/tex&quot;&gt;\operatorname{tr} : \operatorname{Mat}_{d \times d}(\mathbb{R}) \to \mathbb{R}&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt; denotes the number of vertices on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; in this context, we can deduce that &lt;script type=&quot;math/tex&quot;&gt;W_G(X) \in \operatorname{null}(p(T)) = \oplus_{k = 1}^{j} \operatorname{span} \left \{ \frac{1}{1 - \lambda_k X} \right \}&lt;/script&gt;; hence we can deduce that &lt;script type=&quot;math/tex&quot;&gt;W_G(X) = \sum\limits_{k = 1}^{j} \frac{c_k}{1 - \lambda_k X}&lt;/script&gt; for some unique scalars &lt;script type=&quot;math/tex&quot;&gt;c_k \in \mathbb{R}&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq j&lt;/script&gt;. However, if we know that the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_{\lambda}&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; denotes the set of distinct eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, then it turns out that &lt;script type=&quot;math/tex&quot;&gt;A^{n}&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A^{n} = \sum\limits_{\lambda \in \sigma(A)} \lambda^{n} E_{\lambda}&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;n \geq 0&lt;/script&gt;; and hence it turns out that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{tr}(A^{n}) = \sum\limits_{\lambda \in \sigma(A)} \lambda^{n} \operatorname{tr}(E_{\lambda})&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;n \geq 0&lt;/script&gt; by linearity properties of trace. If we consider the fact that the &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;-th coefficient of &lt;script type=&quot;math/tex&quot;&gt;W_G(X)&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;\operatorname{tr}(A^{n}) = \sum\limits_{\lambda \in \sigma(A)} \lambda^{n} \operatorname{tr}(E_{\lambda}) = \sum\limits_{k=1}^{j} \lambda_{k}^{n} \operatorname{tr}(E_{\lambda_k})&lt;/script&gt; and is also given by the &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;-th coefficient of &lt;script type=&quot;math/tex&quot;&gt;T^{n} \left ( \sum\limits_{k = 1}^{j} \frac{c_k}{1 - \lambda_k X} \right )&lt;/script&gt; which is equal to &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{k = 1}^{j} \lambda_{k}^{n} c_k&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;n \geq 0&lt;/script&gt;, then we see that each &lt;script type=&quot;math/tex&quot;&gt;c_k = \operatorname{tr}(E_{\lambda_k})&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq j&lt;/script&gt; since each &lt;script type=&quot;math/tex&quot;&gt;c_k&lt;/script&gt; is unique. Hence we ultimately get that &lt;script type=&quot;math/tex&quot;&gt;W_G(X)&lt;/script&gt; admits the partial fraction decomposition &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) = \sum\limits_{\lambda \in \sigma(A)} \frac{\operatorname{tr}(E_{\lambda})}{1 - \lambda X}&lt;/script&gt; as desired.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Consider the spectral idempotent &lt;script type=&quot;math/tex&quot;&gt;E_\lambda&lt;/script&gt; for an arbitrary &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; denotes the set of distinct eigenvalues of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. Then, since &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}^{2} = E_{\lambda}&lt;/script&gt; we can see that &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}^{2} - E_{\lambda} = 0&lt;/script&gt; and hence that the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;p(x) = x(x - 1)&lt;/script&gt;; since &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; splits into distinct linear factors, this means that &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}&lt;/script&gt; is diagonalizable with &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;s and &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;s lying along the diagonal matrix that it is similar to. Since the rank of the diagonal matrix that &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}&lt;/script&gt; is similar to is equal to the rank of &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}&lt;/script&gt;, and since the only non-zero entries in the diagonal matrix that &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}&lt;/script&gt; is similar to will be &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;s lying along said matrix’s diagonal, we can deduce that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{rank}(E_{\lambda}) = \operatorname{tr}(E_{\lambda})&lt;/script&gt;. Lastly, since &lt;script type=&quot;math/tex&quot;&gt;\operatorname{rank}(E_{\lambda}) = \operatorname{dim}(\operatorname{null}(A - \lambda I))&lt;/script&gt;, and since the multiplicity &lt;script type=&quot;math/tex&quot;&gt;m_\lambda&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; as a eigenvalue of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;m_\lambda = \operatorname{dim}(\operatorname{null}(A - \lambda I))&lt;/script&gt;, we get that &lt;script type=&quot;math/tex&quot;&gt;m_\lambda = \operatorname{tr}(E_{\lambda})&lt;/script&gt;. Therefore we get that &lt;script type=&quot;math/tex&quot;&gt;m_{\lambda^{'}} = \operatorname{tr}(E_{\lambda_{'}})&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\lambda^{'} \in \sigma(A)&lt;/script&gt;, since our choice of &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; in this context is arbitrary.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, I would like to break out of this context here and conclude that in general the closed walk generating series admits a closed form as a rational expression in the sense that I’ve shown is true in this context, since &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; in this context is arbitrary.
I would next like to move onward to achieving my original goal of verifying that a pair of simple graphs are cospectral if and only if their respective generating series for all closed walks weighted by length are equal:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are a pair of cospectral simple graphs, where the respective characteristic polynomials of the adjacency matrices of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are denoted by &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(x)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\phi_{H}(x)&lt;/script&gt;. Then, assuming that my previous result is true, we can see that the respective generating series &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;W_{H}(X)&lt;/script&gt; for all closed walks on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; weighted by length admit closed forms as rational expressions given by &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) = \frac{X^{-1} \phi_{G}^{'}(X^{-1})}{\phi_{G}(X^{-1})}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;W_{H}(X) = \frac{X^{-1} \phi_{H}^{'}(X^{-1})}{\phi_{H}(X^{-1})}&lt;/script&gt;. However, since &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are cospectral, we know that in particular &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(X^{-1}) = \phi_{H}(X^{-1})&lt;/script&gt; and can further deduce that &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}^{'}(X^{-1}) = \phi_{H}^{'}(X^{-1})&lt;/script&gt; as well. Hence, it is quite clear that &lt;script type=&quot;math/tex&quot;&gt;W_{G}(X) = W_{H}(X)&lt;/script&gt; in this context; therefore, if any pair simple graphs of are cospectral, then their respective generating series for all closed walks weighted by length must be equal, since &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; in this context are arbitrary.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Now, suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are a pair of simple graphs whose respective generating series for all closed walks weighted by length are equal, i.e &lt;script type=&quot;math/tex&quot;&gt;W_G(X) = W_H(X)&lt;/script&gt;. Then, assuming my previous result, we know that &lt;script type=&quot;math/tex&quot;&gt;\frac{X^{-1} \phi_{G}^{'}(X^{-1})}{\phi_{G}(X^{-1})} = \frac{X^{-1} \phi_{H}^{'}(X^{-1})}{\phi_{H}(X^{-1})}&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(x)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\phi_{H}(x)&lt;/script&gt; denote the respective characteristic polynomials of the adjacency matrices of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt;. From this, we can ultimately deduce that &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}^{'}(X^{-1}) \phi_{H}(X^{-1}) = \phi_{G}(X^{-1})\phi_{H}^{'}(X^{-1})&lt;/script&gt; and furthermore that &lt;script type=&quot;math/tex&quot;&gt;\left ( \frac{\phi_{G}(X^{-1})}{\phi_{H}(X^{-1})} \right )^{'} = 0&lt;/script&gt;. Lastly, since characteristic polynomials are monic, we can then deduce that &lt;script type=&quot;math/tex&quot;&gt;\frac{\phi_{G}(X^{-1})}{\phi_{H}(X^{-1})} = 1&lt;/script&gt; from the fact that &lt;script type=&quot;math/tex&quot;&gt;\left ( \frac{\phi_{G}(X^{-1})}{\phi_{H}(X^{-1})} \right )^{'} = 0&lt;/script&gt;. Hence we get that &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(X^{-1}) = \phi_{H}(X^{-1})&lt;/script&gt; and can see that &lt;script type=&quot;math/tex&quot;&gt;\phi_{G}(x) = \phi_{H}(x)&lt;/script&gt;. Therefore, we can conclude that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are cospectral because their respective characteristic polynomials are equal; we can also more generally conclude that if the respective generating series for closed walks weighted by length of a pair of simple graphs are equal, then they must be cospectral, since &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; in this context are arbitrary.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Therefore, we can ultimately conclude from this post that a pair of simple graphs are cospectral if and only if their respective generating series for all closed walks weighted by length are equal, as desired.&lt;/p&gt;</content><summary type="html">In this post, my goal is to verify that a pair of simple graphs are cospectral if and only if their respective generating series for all closed walks weighted by length are equal.</summary></entry><entry><title type="html">Invariant Column Spaces</title><link href="http://localhost:4000/2016/10/01/invariant-column-spaces.html" rel="alternate" type="text/html" title="Invariant Column Spaces" /><published>2016-10-01T00:00:00-04:00</published><updated>2016-10-01T00:00:00-04:00</updated><id>http://localhost:4000/2016/10/01/invariant-column-spaces</id><content type="html" xml:base="http://localhost:4000/2016/10/01/invariant-column-spaces.html">&lt;p&gt;In this post, my goal is to show that for any &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; matrix &lt;script type=&quot;math/tex&quot;&gt;A \in \operatorname{Mat}_{n \times n}(\mathbb{F})&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; matrix &lt;script type=&quot;math/tex&quot;&gt;X \in \operatorname{Mat}_{n \times m}(\mathbb{F})&lt;/script&gt; with entries in a field &lt;script type=&quot;math/tex&quot;&gt;\mathbb{F}&lt;/script&gt;, the column space of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant if and only if &lt;script type=&quot;math/tex&quot;&gt;AX = XY&lt;/script&gt; for some &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; matrix &lt;script type=&quot;math/tex&quot;&gt;Y \in \operatorname{Mat}_{m \times m}(\mathbb{F})&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Firstly, suppose that we are given matrices &lt;script type=&quot;math/tex&quot;&gt;A \in \operatorname{Mat}_{n \times n}(\mathbb{F})&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X \in \operatorname{Mat}_{n \times m}(\mathbb{F})&lt;/script&gt; where the column space of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant. Then, for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq n&lt;/script&gt;, we can construct a vector &lt;script type=&quot;math/tex&quot;&gt;y_j \in \mathbb{F}^{m}&lt;/script&gt; such that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A (X e_j)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{k = 1}^{m} a_{k,j} (X e_k)&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;[&lt;/strong&gt; for some &lt;script type=&quot;math/tex&quot;&gt;a_{k, j} \in \mathbb{F}&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;, since the column space of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant &lt;strong&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X \left ( \sum\limits_{k = 1}^{m} a_{k,j} e_k \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X y_j&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;[&lt;/strong&gt; by letting &lt;script type=&quot;math/tex&quot;&gt;y_j = \sum\limits_{k = 1}^{m} a_{k,j} e_k&lt;/script&gt; &lt;strong&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;. From there, we can construct a matrix &lt;script type=&quot;math/tex&quot;&gt;Y \in \operatorname{Mat}_{m \times m}(\mathbb{F})&lt;/script&gt; such that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;AX&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left [ A (X e_1) \mid \cdots \mid A (X e_m) \right ]&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left [ X y_1 \mid \cdots \mid X y_m \right ]&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= XY&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;[&lt;/strong&gt; by letting &lt;script type=&quot;math/tex&quot;&gt;Y = \left [ y_1 \mid \cdots \mid y_m \right ]&lt;/script&gt; &lt;strong&gt;]&lt;/strong&gt;. Therefore, since our particular choices of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; in this context are arbitrary, we have that: for any matrices &lt;script type=&quot;math/tex&quot;&gt;A \in \operatorname{Mat}_{n \times n}(\mathbb{F})&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X \in \operatorname{Mat}_{n \times m}(\mathbb{F})&lt;/script&gt;, if the column space of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant, then there exists a matrix &lt;script type=&quot;math/tex&quot;&gt;Y \in \operatorname{Mat}_{m \times m}(\mathbb{F})&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;AX = XY&lt;/script&gt; as desired.
Secondly, suppose that we are given matrices &lt;script type=&quot;math/tex&quot;&gt;A \in \operatorname{Mat}_{n \times n}(\mathbb{F})&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X \in \operatorname{Mat}_{n \times m}(\mathbb{F})&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;AX = XY&lt;/script&gt; for some &lt;script type=&quot;math/tex&quot;&gt;Y \in \operatorname{Mat}_{m \times m}(\mathbb{F})&lt;/script&gt;. Then, for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq m&lt;/script&gt;, we have that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A(X e_j)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X (Y e_j)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= X \left( \sum\limits_{k=1}^{m} Y_{k, j} e_k \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{k=1}^{m} Y_{k, j} (X e_k)&lt;/script&gt;

&lt;p&gt;. This means, in particular, that &lt;script type=&quot;math/tex&quot;&gt;A (X e_j) \in \operatorname{Col}(X)&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq m&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Now, select any vector &lt;script type=&quot;math/tex&quot;&gt;u \in \operatorname{Col}(X)&lt;/script&gt;; then we know that &lt;script type=&quot;math/tex&quot;&gt;u = X v = \sum\limits_{j=1}^{m} v_j (X e_j)&lt;/script&gt; for some vector &lt;script type=&quot;math/tex&quot;&gt;v \in \mathbb{F}^{m}&lt;/script&gt;. From there, we can deduce that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A u&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= A \left ( \sum\limits_{j=1}^{m} v_j (X e_j) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{j=1}^{m} v_j (A (X e_j) )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{j=1}^{m} v_j \left ( \sum\limits_{k=1}^{m} Y_{k, j} (X e_k) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{j=1}^{m} \sum\limits_{k=1}^{m} v_j Y_{k, j} (X e_k)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{k=1}^{m} \left ( \sum\limits_{j=1}^{m} v_j Y_{k, j} \right ) (X e_k)&lt;/script&gt;

&lt;p&gt;. This means that &lt;script type=&quot;math/tex&quot;&gt;A u \in \operatorname{Col}(X)&lt;/script&gt;, and hence that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{Col}(X)&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant, since our choice of &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; in this inner context is arbitrary. Therefore, since our contextual choices of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; are likewise arbitrary, we have that: for any matrices &lt;script type=&quot;math/tex&quot;&gt;A \in \operatorname{Mat}_{n \times n}(\mathbb{F})&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;X \in \operatorname{Mat}_{n \times m}(\mathbb{F})&lt;/script&gt;, if &lt;script type=&quot;math/tex&quot;&gt;AX = XY&lt;/script&gt; for some &lt;script type=&quot;math/tex&quot;&gt;Y \in \operatorname{Mat}_{m \times m}(\mathbb{F})&lt;/script&gt;, then the column of space of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant as desired.
Hence we can conclude that for any &lt;script type=&quot;math/tex&quot;&gt;n x n&lt;/script&gt; matrix &lt;script type=&quot;math/tex&quot;&gt;A \in \operatorname{Mat}_{n \times n}(\mathbb{F})&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; matrix &lt;script type=&quot;math/tex&quot;&gt;X \in \operatorname{Mat}_{n \times m}(\mathbb{F})&lt;/script&gt; with entries in a field &lt;script type=&quot;math/tex&quot;&gt;\mathbb{F}&lt;/script&gt;, the column space of &lt;script type=&quot;math/tex&quot;&gt;X&lt;/script&gt; is &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;-invariant if and only if &lt;script type=&quot;math/tex&quot;&gt;AX = XY&lt;/script&gt; for some &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; matrix &lt;script type=&quot;math/tex&quot;&gt;Y \in \operatorname{Mat}_{m \times m}(\mathbb{F})&lt;/script&gt;, as desired.&lt;/p&gt;</content><summary type="html">In this post, my goal is to show that for any  x  matrix  and  x  matrix  with entries in a field , the column space of  is -invariant if and only if  for some  x  matrix .</summary></entry><entry><title type="html">Spectral Decompositions of Continuous-Time Quantum Walks</title><link href="http://localhost:4000/2016/09/28/spectral-decompositions-of-continuous-time-quantum-walks.html" rel="alternate" type="text/html" title="Spectral Decompositions of Continuous-Time Quantum Walks" /><published>2016-09-28T01:00:00-04:00</published><updated>2016-09-28T01:00:00-04:00</updated><id>http://localhost:4000/2016/09/28/spectral-decompositions-of-continuous-time-quantum-walks</id><content type="html" xml:base="http://localhost:4000/2016/09/28/spectral-decompositions-of-continuous-time-quantum-walks.html">&lt;p&gt;In my previous post, I assumed the fact that if the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of a simple graph &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_{\lambda}&lt;/script&gt;, then the continuous-time quantum walk &lt;script type=&quot;math/tex&quot;&gt;U(t)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; relative to its adjacency matrix has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;U(t) = \sum\limits_{\lambda \in \sigma(A)} \operatorname{exp}(it(\lambda)) E_{\lambda}&lt;/script&gt;; here &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; denotes the set of distinct eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. I would now like to verify that this fact is indeed true:&lt;/p&gt;

&lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is an arbitrary simple graph whose adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_{\lambda}&lt;/script&gt;. Then, like in my previous blog posts, the continuous-time quantum walk of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; relative to is adjacency matrix is given by &lt;script type=&quot;math/tex&quot;&gt;U(t) = \operatorname{exp}(itA) = \sum\limits_{n = 0}^{\infty} \frac{(itA)^{n}}{n!}&lt;/script&gt;. From there, we can deduce that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;U(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(itA)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp} \left ( it \left ( \sum\limits_{\lambda \in \sigma(A)} \lambda E_{\lambda} \right ) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \prod\limits_{\lambda \in \sigma(A)} \operatorname{exp}(it(\lambda)E_{\lambda})&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;[&lt;/strong&gt; by properties of matrix exponentials for matrices that commute &lt;strong&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \operatorname{exp}(it(\lambda)E_{\lambda})&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;[&lt;/strong&gt; since &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}E_{\lambda'} = 0&lt;/script&gt; unless &lt;script type=&quot;math/tex&quot;&gt;\lambda = \lambda'&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\lambda, \lambda' \in \sigma(A)&lt;/script&gt; &lt;strong&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \sum\limits_{n=0}^{\infty} \frac{(it(\lambda)E_{\lambda})^{n}}{n!}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \sum\limits_{n=0}^{\infty} \frac{(it(\lambda))^{n}}{n!} E_{\lambda}^{n}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \sum\limits_{n=0}^{\infty} \frac{(it(\lambda))^{n}}{n!} E_{\lambda}&lt;/script&gt;

&lt;p&gt;&lt;strong&gt;[&lt;/strong&gt; since each &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}&lt;/script&gt; is idempotent for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt; &lt;strong&gt;]&lt;/strong&gt;&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \left ( \sum\limits_{n=0}^{\infty} \frac{(it(\lambda))^{n}}{n!} \right ) E_{\lambda}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \sum\limits_{\lambda \in \sigma(A)} \operatorname{exp}(it(\lambda)) E_{\lambda}&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Hence the continuous-time quantum walk &lt;script type=&quot;math/tex&quot;&gt;U(t)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has its spectral decomposition as desired; and therefore, the continuous-time quantum walk relative to the adjacency matrix of any simple graph has its spectral decomposition as desired, since &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is an arbitrary simple graph in this context.&lt;/p&gt;</content><summary type="html">In my previous post, I assumed the fact that if the adjacency matrix  of a simple graph  has the spectral decomposition , then the continuous-time quantum walk  of  relative to its adjacency matrix has the spectral decomposition ; here  denotes the set of distinct eigenvalues of . I would now like to verify that this fact is indeed true:</summary></entry><entry><title type="html">Perfect State Transfer and Uniform Mixing on Complete Graphs</title><link href="http://localhost:4000/2016/09/28/perfect-state-transfer-and-uniform-mixing-on-complete-graphs.html" rel="alternate" type="text/html" title="Perfect State Transfer and Uniform Mixing on Complete Graphs" /><published>2016-09-28T00:00:00-04:00</published><updated>2016-09-28T00:00:00-04:00</updated><id>http://localhost:4000/2016/09/28/perfect-state-transfer-and-uniform-mixing-on-complete-graphs</id><content type="html" xml:base="http://localhost:4000/2016/09/28/perfect-state-transfer-and-uniform-mixing-on-complete-graphs.html">&lt;p&gt;I would like to continue to talk about my investigations into what simple graphs admit the properties known as perfect state transfer and uniform mixing relative to their adjacency matrices. In this particular post, my goals are to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Verify that the only complete graph that admits the property known as perfect state transfer is &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verify that the only complete graphs that admit the property known as uniform mixing are &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;K_3&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;K_4&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In order to show that the only complete graph that admits perfect state transfer is &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, I would like to first assume that if a simple graph admits perfect state transfer between a pair of distinct vertices at a particular time, then said pair of distinct vertices must also satisfy the property known as being strongly cospectral. A pair of distinct vertices on a simple graph are said to be strongly cospectral if they are both cospectral and parallel. I’ve previously discussed a few characterizations and sufficient conditions for a pair of distinct vertices to be considered cospectral on a simple graph: for an initial discussion on what it means for a pair of distinct vertices on a simple graph to be cospectral, please see my past blog post (https://m4farrel.quora.com/Closed-Walks-and-Cospectral-Vertices) on the matter. On the other hand, I’ve yet to define what it means for a pair of distinct vertices to be parallel on a simple graph: a pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on a simple graph &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are said to be parallel if &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}e_u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;E_{\lambda}e_v&lt;/script&gt; are linearly dependent for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; denotes the set of distinct eigenvalues of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. With those definitions in mind, I would like to proceed to show that unless &lt;script type=&quot;math/tex&quot;&gt;n = 2&lt;/script&gt;, the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; does not have any strongly cospectral vertices; and hence show that unless &lt;script type=&quot;math/tex&quot;&gt;n = 2&lt;/script&gt;, the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; does not admit perfect state transfer, since strong cospectrality is necessary condition for a simple graph to admit perfect state transfer between a pair of distinct vertices.&lt;/p&gt;

&lt;p&gt;We also saw in one of my &lt;a href=&quot;https://m4farrel.quora.com/Complete-Graphs-Are-Characterized-by-Their-Spectra&quot;&gt;previous blog posts&lt;/a&gt; that the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of a complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = (n - 1)E_{n-1} - E_{-1}&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;E_{n-1} = \frac{1}{n} J&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;E_{-1} = I - \frac{1}{n} J&lt;/script&gt;. Since &lt;script type=&quot;math/tex&quot;&gt;E_{n-1}&lt;/script&gt; is a rank-one matrix, it is apparent that &lt;script type=&quot;math/tex&quot;&gt;E_{n-1}e_u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;E_{n-1}e_v&lt;/script&gt; are linearly dependent for any pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt;; so to check that a pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; are parallel, it suffices to check that &lt;script type=&quot;math/tex&quot;&gt;E_{-1}e_u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;E_{-1}e_v&lt;/script&gt; are linearly dependent. Assuming that the Cauchy-Schwartz inequality holds for the standard inner product and norm on &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^{n}&lt;/script&gt;, we can check whether or not equality holds for &lt;script type=&quot;math/tex&quot;&gt;\mid \langle E_{-1}e_u, E_{-1}e_v \rangle \mid \leq \lVert E_{-1} e_u \rVert \lVert E_{-1}e_u \rVert&lt;/script&gt; in order to decide whether or not &lt;script type=&quot;math/tex&quot;&gt;E_{-1}e_u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;E_{-1}e_v&lt;/script&gt; are linearly dependent for a pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt;. By inspection, it is apparent that this equality does not hold for any pair of vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; unless &lt;script type=&quot;math/tex&quot;&gt;n = 2&lt;/script&gt;, in which case it holds for the only pair of distinct vertices on &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;; hence we already know the only complete graph that could potentially admit perfect state transfer is &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, since any other complete graph does not have any parallel vertices, and hence does not have any strongly cospectral vertices either.&lt;/p&gt;

&lt;p&gt;I would now like to verify that &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; indeed admits perfect state transfer between its only pair of distinct vertices. For &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, we know that its only pair of vertices are strongly cospectral because they are parallel, and are also cospectral because there is an automorphism on &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; that sends one vertex to the other; so we have reason to believe that &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; could potentially admit perfect state transfer between its only pair of distinct vertices. We can in fact verify that &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; indeed admits perfect state transfer between its only pair of distinct vertices now using a direct approach. For the purposes of this particular blog post, I would like to assume another fact that if the spectral decomposition of the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of a simple graph &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;A = \sum_{\lambda \in \sigma(A)} \lambda E_{\lambda}&lt;/script&gt;, then the spectral decomposition of its continuous-time quantum walk relative to its adjacency matrix is given by &lt;script type=&quot;math/tex&quot;&gt;U(t) = \sum_{\lambda \in \sigma(A)} \operatorname{exp}(it(\lambda)) E_{\lambda}&lt;/script&gt;. Then, the continuous-time quantum walk of &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; relative to its adjacency matrix is given by:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;U(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(itA)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(it)E_{1} + \operatorname{exp}(-it)E_{-1}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(it)J + \operatorname{exp}(-it)(I - J)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (\operatorname{exp}(it) - \operatorname{exp}(-it)) J + \operatorname{exp}(-it)I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (\operatorname{exp}(it) - \operatorname{exp}(-it)) (J - I) + (\operatorname{exp}(-it) + (\operatorname{exp}(it) - \operatorname{exp}(-it))) I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (\operatorname{exp}(it) - \operatorname{exp}(-it)) A + \operatorname{exp}(it)I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= i (2 sin(t)) A + \operatorname{exp}(it)I&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;We can further see that if &lt;script type=&quot;math/tex&quot;&gt;U(t)e_1 = \operatorname{exp}(i \theta) e_2&lt;/script&gt; at some time &lt;script type=&quot;math/tex&quot;&gt;t \in \mathbb{R}&lt;/script&gt; and for some angle &lt;script type=&quot;math/tex&quot;&gt;\theta \in [0, 2 \pi]&lt;/script&gt;, i.e. &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; admits perfect state transfer between its only pair of distinct vertices at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;sin(t) = 0&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;t = \theta&lt;/script&gt;. Hence we can deduce that &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; indeed admits perfect state transfer between its only pair of distinct vertices at time &lt;script type=&quot;math/tex&quot;&gt;t = \frac{\pi}{2}&lt;/script&gt;; moreover, together with the fact from the previous paragraph the &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; does not have any strongly cospectral vertices unless &lt;script type=&quot;math/tex&quot;&gt;n = 2&lt;/script&gt;, we can conclude that &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt; is the only complete graph that admits perfect state transfer.&lt;/p&gt;

&lt;p&gt;I would now like to move on to verify that &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;K_3&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;K_4&lt;/script&gt; are the only complete graphs that admit uniform mixing. Recalling the definition of what it means for a simple graph to admit uniform mixing relative to its adjacency matrix from one of &lt;a href=&quot;https://m4farrel.quora.com/Perfect-State-Transfer-and-Uniform-Mixing-on-Cartesian-Products-of-Graphs&quot;&gt;my previous posts&lt;/a&gt;, We can deduce a general expression for the mixing matrix of the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices as follows:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= U(t) \circ U^{*}(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \operatorname{exp}(it(n-1)) E_{n-1} + \operatorname{exp}(-it) E_{-1} \right ) \circ \left ( \operatorname{exp}(it(-(n - 1))) E_{n-1} + \operatorname{exp}(it) E_{-1} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= E_{n-1} \circ E_{n-1} + \left ( \operatorname{exp}(it(n)) + \operatorname{exp}(it(-n)) \right ) E_{n-1} \circ E_{-1} + E_{-1} \circ E_{-1}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \frac{1}{n} J \right ) \circ \left ( \frac{1}{n} J \right ) + 2 cos(nt) \left ( \frac{1}{n} J \right ) \circ \left ( I - \frac{1}{n} J \right ) + (I - \frac{1}{n} J) \circ (I - \frac{1}{n} J )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{1}{n^{2}} J + \frac{2 cos(nt)}{n} (I - \frac{1}{n} J ) + \left ( (1 - \frac{2}{n}) I + \frac{1}{n^{2}} J \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{2 - 2 cos (nt)}{n^{2}} J + \frac{n^{2} - 2n + (2n)cos(nt)}{n^2} I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{2 - 2 cos (nt)}{n^{2}}(J - I) + \frac{n^{2} - 2n + 2 + 2(n-1)cos(nt)}{n^2} I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{2 - 2 cos (nt)}{n^{2}} A + \frac{n^{2} - 2n + 2 + 2(n-1)cos(nt)}{n^2} I&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;From there, we can deduce that if the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices admits uniform mixing at some specific time &lt;script type=&quot;math/tex&quot;&gt;t \in \mathbb{R}&lt;/script&gt;, i.e. &lt;script type=&quot;math/tex&quot;&gt;M(t) = \frac{1}{n} J&lt;/script&gt;, then we must have that &lt;script type=&quot;math/tex&quot;&gt;\frac{2 - 2 cos (nt)}{n} = \frac{n^{2} - 2n + 2 + 2(n-1)cos(nt)}{n}&lt;/script&gt;. Then, we can ultimately infer from this that we must have that &lt;script type=&quot;math/tex&quot;&gt;cos(nt) = 1 - \frac{1}{2} n&lt;/script&gt;, assuming that the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; admits uniform mixing at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;. It is then apparent that unless &lt;script type=&quot;math/tex&quot;&gt;n \leq 3&lt;/script&gt;, our original assumption cannot be true, since we know that &lt;script type=&quot;math/tex&quot;&gt;-1 \leq cos(nt) \leq 1&lt;/script&gt;. Therefore, we can conclude that the only complete graphs that admit uniform mixing are &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;K_3&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;K_4&lt;/script&gt;, as desired.
Hence we have ultimately verified in this post that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The only complete graph that admits the property known as perfect state transfer is &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The only complete graphs that admit the property known as uniform mixing are &lt;script type=&quot;math/tex&quot;&gt;K_2&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;K_3&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;K_4&lt;/script&gt;.
as desired.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><summary type="html">I would like to continue to talk about my investigations into what simple graphs admit the properties known as perfect state transfer and uniform mixing relative to their adjacency matrices. In this particular post, my goals are to:</summary></entry><entry><title type="html">Complete Graphs Are Characterized by Their Spectra</title><link href="http://localhost:4000/2016/09/23/complete-graphs-are-characterized-by-their-spectra.html" rel="alternate" type="text/html" title="Complete Graphs Are Characterized by Their Spectra" /><published>2016-09-23T00:00:00-04:00</published><updated>2016-09-23T00:00:00-04:00</updated><id>http://localhost:4000/2016/09/23/complete-graphs-are-characterized-by-their-spectra</id><content type="html" xml:base="http://localhost:4000/2016/09/23/complete-graphs-are-characterized-by-their-spectra.html">&lt;p&gt;Having cospectral adjacency matrices is a necessary condition for simple graphs to be isomorphic. In general, however, it is not true that satisfying this condition alone is also sufficient for simple graphs to be isomorphic - but, for some families of simple graphs it is, and these families of simple graphs are particularly interesting to identify and study. In this particular post, my goal is to show that the complete graphs are an example of a family of simple graphs that are characterized by their spectra - which is to say that a simple graph &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices is isomorphic to the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices if and only if they are cospectral relative to their adjacency matrices.&lt;/p&gt;

&lt;p&gt;First and foremost, I would like to show how to deduce a general expression for the spectrum of a complete graph on any number vertices; so that we also know what the spectrum of another simple graph must be in order for it and a complete graph on the same number of vertices to be cospectral relative to their adjacency matrices. The adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices is given by &lt;script type=&quot;math/tex&quot;&gt;A = J - I&lt;/script&gt;. From there, we can deduce that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;A^{2}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (J - I)^{2}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= J^{2} - JI - IJ + I^{2}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= nJ - 2J + I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (n - 2)J + I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (n - 2)J - (n - 2)I + (n - 2)I + I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (n - 2)(J - I) + (n - 1) I&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (n - 2)A + (n - 1)I&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;We can then see that the minimal polynomial of the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices is given by &lt;script type=&quot;math/tex&quot;&gt;p(x) = (x - (n - 1))(x + 1)&lt;/script&gt;, since &lt;script type=&quot;math/tex&quot;&gt;A^{2} - (n - 2)A - (n - 1)I = (A - (n - 1)I)(A + I) = 0&lt;/script&gt;. Additionally, we have that the spectral decomposition of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;A = (n - 1)E_{n-1} - E_{-1}&lt;/script&gt; where, in particular, &lt;script type=&quot;math/tex&quot;&gt;E_{n - 1} = \frac{1}{(n - 1) + 1} (A + I) = \frac{1}{n} J&lt;/script&gt;; hence we can further deduce that &lt;script type=&quot;math/tex&quot;&gt;n - 1&lt;/script&gt; must have a multiplicity of one as an eigenvalue of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, and consequently that &lt;script type=&quot;math/tex&quot;&gt;-1&lt;/script&gt; must have a multiplicity of &lt;script type=&quot;math/tex&quot;&gt;n - 1&lt;/script&gt; as an eigenvalue of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, since their multiplicities must sum to &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;. Therefore, we can ultimately say that characteristic polynomial of the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices relative to its adjacency matrix is given by &lt;script type=&quot;math/tex&quot;&gt;\phi(x) = (x - (n - 1))(x + 1)^{(n-1)}&lt;/script&gt;, and hence have deduced the spectrum of an arbitrary complete graph relative to its adjacency matrix as desired.&lt;/p&gt;

&lt;p&gt;Now, I would like to use this general expression for the spectrum of a complete graph on any number of vertices to show that if a simple graph &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and the complete graph on the same number of vertices are cospectral relative to their adjacency matrices, then they must be isomorphic. Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is an arbitrary simple graph on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices whose characteristic polynomial is given by &lt;script type=&quot;math/tex&quot;&gt;\phi(x) = (x - (n - 1))(x + 1)^{(n-1)}&lt;/script&gt;, relative to its adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Then we know that the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into distinct linear factors, and is given by &lt;script type=&quot;math/tex&quot;&gt;p(x) = (x - (n - 1))(x + 1)&lt;/script&gt;; hence we can deduce that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = (n - 1)E_{n - 1} - E_{-1}&lt;/script&gt;. Furthermore, we know that &lt;script type=&quot;math/tex&quot;&gt;E_{n - 1} + E_{-1} = I&lt;/script&gt; and hence &lt;script type=&quot;math/tex&quot;&gt;E_{-1} = I - E_{n-1}&lt;/script&gt;; this tells us that &lt;script type=&quot;math/tex&quot;&gt;A = nE_{n-1} - I&lt;/script&gt;. Additionally, we can see that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{rank}(E_{n - 1}) = 1&lt;/script&gt;, since from &lt;script type=&quot;math/tex&quot;&gt;\phi(x)&lt;/script&gt; we can see that &lt;script type=&quot;math/tex&quot;&gt;n - 1&lt;/script&gt; has a multiplicity of one as an eigenvalue of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. We also must have that &lt;script type=&quot;math/tex&quot;&gt;A_{k,k} = (nE_{n-1} - I)_{k,k} = 0&lt;/script&gt; and hence that &lt;script type=&quot;math/tex&quot;&gt;(n E_{n - 1})_{k,k} = 1&lt;/script&gt;, for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;; together with the fact that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{rank}(E_{n - 1}) = 1&lt;/script&gt;, we can ultimately conclude that &lt;script type=&quot;math/tex&quot;&gt;nE_{n-1} = J&lt;/script&gt; and hence that &lt;script type=&quot;math/tex&quot;&gt;E_{n-1} = \frac{1}{n} J&lt;/script&gt;. Therefore, we have that &lt;script type=&quot;math/tex&quot;&gt;A = (n - 1)E_{n-1} - E_{-1} = (n - 1)E_{n-1} - (I - E_{n-1}) = (n - 1)(\frac{1}{n} J) - (I - \frac{1}{n} J) = J - I&lt;/script&gt;, and hence that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; must ultimately be isomorphic to the complete graph &lt;script type=&quot;math/tex&quot;&gt;K_n&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices as desired.&lt;/p&gt;

&lt;p&gt;We know that it is always true that isomorphic simple graphs are cospectral relative to their adjacency matrices; we have shown that the converse is also true when restricted to simple graphs and complete graphs that are cospectral relative to their adjacency matrices. Hence we can ultimately conclude that a simple graph is isomorphic to a complete graph on the same number of vertices if and only if they are cospectral relative to their adjacency matrices, as desired.&lt;/p&gt;</content><summary type="html">Having cospectral adjacency matrices is a necessary condition for simple graphs to be isomorphic. In general, however, it is not true that satisfying this condition alone is also sufficient for simple graphs to be isomorphic - but, for some families of simple graphs it is, and these families of simple graphs are particularly interesting to identify and study. In this particular post, my goal is to show that the complete graphs are an example of a family of simple graphs that are characterized by their spectra - which is to say that a simple graph  on  vertices is isomorphic to the complete graph  on  vertices if and only if they are cospectral relative to their adjacency matrices.</summary></entry><entry><title type="html">Perfect State Transfer and Uniform Mixing on Cartesian Products of Graphs</title><link href="http://localhost:4000/2016/09/18/perfect-state-transfer-and-uniform-mixing-on-cartesian-products-of-graphs.html" rel="alternate" type="text/html" title="Perfect State Transfer and Uniform Mixing on Cartesian Products of Graphs" /><published>2016-09-18T00:00:00-04:00</published><updated>2016-09-18T00:00:00-04:00</updated><id>http://localhost:4000/2016/09/18/perfect-state-transfer-and-uniform-mixing-on-cartesian-products-of-graphs</id><content type="html" xml:base="http://localhost:4000/2016/09/18/perfect-state-transfer-and-uniform-mixing-on-cartesian-products-of-graphs.html">&lt;p&gt;In this post, my goals are to:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Verify that Cartesian products of simple graphs that admit the property known as perfect state transfer at the same time also admit perfect state transfer at the same time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Verify that Cartesian products of simple graphs that admit the property known as uniform mixing at the same time also admit uniform mixing at the same time, assuming that the simple graphs in context have the same number of vertices.
First and foremost, I would like to define what it means for a simple graph to admit the properties known as perfect state transfer and uniform mixing. Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is a simple graph on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; with adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Then, in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The continuous-time quantum walk &lt;script type=&quot;math/tex&quot;&gt;U : \mathbb{R} \to \operatorname{Mat}_{n \times n}(\mathbb{C})&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; relative to its adjacency matrix is defined as &lt;script type=&quot;math/tex&quot;&gt;U(t) := \operatorname{exp}(itA) = \sum\limits_{n = 0}^{\infty} \frac{ \left(itA \right)^{n}}{n!}&lt;/script&gt;.&lt;/li&gt;
  &lt;li&gt;Suppose &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; are a pair of distinct vertices on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. If &lt;script type=&quot;math/tex&quot;&gt;U(t) e_u = \operatorname{exp}(i\theta) e_v&lt;/script&gt; for some particular time &lt;script type=&quot;math/tex&quot;&gt;t \in \mathbb{R}&lt;/script&gt; and angle &lt;script type=&quot;math/tex&quot;&gt;\theta \in [0, 2 \pi]&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is said to admit perfect state transfer (between &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;, at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;).&lt;/li&gt;
  &lt;li&gt;The mixing matrix &lt;script type=&quot;math/tex&quot;&gt;M : \mathbb{R} \to \operatorname{Mat}_{n \times n}(\mathbb{R})&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; relative to its adjacency matrix is defined as &lt;script type=&quot;math/tex&quot;&gt;M(t) := U(t) \circ U^{*}(t)&lt;/script&gt;, i.e. the entry-wise product of &lt;script type=&quot;math/tex&quot;&gt;U(t)&lt;/script&gt; and its conjugate transpose.&lt;/li&gt;
  &lt;li&gt;If &lt;script type=&quot;math/tex&quot;&gt;M(t) = \frac{1}{n} J&lt;/script&gt; at some particular time &lt;script type=&quot;math/tex&quot;&gt;t \in \mathbb{R}&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is said to admit uniform mixing (at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that here &lt;script type=&quot;math/tex&quot;&gt;J&lt;/script&gt; denotes the &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; matrix consisting of all ones as entries.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Secondly, I would like to verify that the following proposition is true:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;For all simple graphs &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; whose continuous-time quantum walks are given by &lt;script type=&quot;math/tex&quot;&gt;U_G (t)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;U_H (t)&lt;/script&gt;, the continuous-time quantum walk of their Cartesian product &lt;script type=&quot;math/tex&quot;&gt;G \Box H&lt;/script&gt; is given by &lt;script type=&quot;math/tex&quot;&gt;U_{G \Box H} (t) = U_G (t) \bigotimes U_H (t)&lt;/script&gt;.
Assuming that this proposition is true, then:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are arbitrary simple graphs such that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; admits perfect state transfer between vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; admits perfect state transfer between vertices &lt;script type=&quot;math/tex&quot;&gt;u'&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v'&lt;/script&gt; at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;. By properties of the Kronecker product and the assumption that my previous proposition is true, we have that:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;U_{G \Box H} \left ( e_{u} \bigotimes e_{u'} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( U_G (t) \bigotimes U_H (t) \right ) \left ( e_{u} \bigotimes e_{u'} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( U_{G}(t) e_{u} \right ) \bigotimes  \left ( U_H (t)  e_{u'} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \operatorname{exp}(i \theta_{1}) e_{v} \right ) \bigotimes \left ( \operatorname{exp}(i \theta_{2}) e_{v'} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(i( \theta_{1} + \theta_{2})) e_{v} \bigotimes e_{v'}&lt;/script&gt;

&lt;p&gt;for some angles &lt;script type=&quot;math/tex&quot;&gt;\theta_{1}, \theta_{2} \in [0, 2 \pi ]&lt;/script&gt;.&lt;/p&gt;

&lt;p&gt;Hence &lt;script type=&quot;math/tex&quot;&gt;G \Box H&lt;/script&gt; admits perfect state transfer at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; as well; and therefore Cartesian products of simple graphs that admit perfect state transfer at the same time also admit perfect state transfer at the same time, since the choice of time and simple graphs in this context are arbitrary.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Similarly, suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are arbitrary simple graphs on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices that both admit uniform mixing at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt;. By properties of the Kronecker product, its compatibility with the entry-wise product for matrices of the same dimensions, and the assumption that my previous proposition is true, we have that:&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;M_{G\Box H}(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= U_{G \Box H}(t) \circ U_{G \Box H}^{*}(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( U_G (t) \bigotimes U_H (t) \right ) \circ \left ( U_G (t) \bigotimes U_H (t) \right )^{*}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( U_G (t) \bigotimes U_H (t) \right ) \circ \left ( U_{G}^{*}(t) \bigotimes U_{H}^{*}(t) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( U_G (t) \circ U_{G}^{*}(t) \right ) \bigotimes \left ( U_H (t) \circ U_{H}^{*}(t) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= M_{G}(t) \bigotimes M_{G}^{*}(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \frac{1}{n} J \right ) \bigotimes \left ( \frac{1}{n} J \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \frac{1}{n^{2}} J&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Hence &lt;script type=&quot;math/tex&quot;&gt;G \Box H&lt;/script&gt; admits uniform mixing at time &lt;script type=&quot;math/tex&quot;&gt;t&lt;/script&gt; as well; and therefore Cartesian products of simple graphs on the same number of vertices that admit uniform at the same time also admit uniform mixing at the same time, since the choice of time and simple graphs on the same number of vertices in this context are arbitrary.
I would now like to show that my previous proposition is indeed true.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt; are arbitrary simple graphs on &lt;script type=&quot;math/tex&quot;&gt;m&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices. Then by properties of matrix exponentials, properties of the Kronecker product, and an assumed identity about the adjacency matrices of the Cartesian products of simple graphs, we have that:&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;U_{G \Box H}(t)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(it A_{G \Box H})&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp} \left ( it \left(A_{G} \bigotimes I_n + I_m \bigotimes A_{H} \right ) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp} \left ( (it A_{G}) \bigotimes I_n + I_m \bigotimes (it A_{H}) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp} \left ( (it A_{G}) \bigotimes I_n \right ) \operatorname{exp} \left ( I_m \bigotimes (it A_{H}) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \sum\limits_{n = 0}^{\infty} \frac{\left ( (it A_{G}) \bigotimes I_n \right )^{n}}{n!} \right ) \left ( \sum\limits_{n = 0}^{\infty} \frac{\left ( I_m \bigotimes (it A_{H}) \right )^{n}}{n!} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \sum\limits_{n = 0}^{\infty} \frac{\left ( it A_{G} \right )^{n}}{n!} \bigotimes I_n \right ) \left ( \sum\limits_{n = 0}^{\infty} I_m \bigotimes \frac{\left ( it A_{H} \right )^{n}}{n!} \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \operatorname{exp}(it A_{G}) \bigotimes I_n \right ) \left ( I_m \bigotimes \operatorname{exp}(it A_{H}) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \left ( \operatorname{exp}(it A_{G}) I_m \right ) \bigotimes  \left ( I_n \operatorname{exp}(it A_{H}) \right )&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \operatorname{exp}(it A_{G}) \bigotimes \operatorname{exp}(it A_{H})&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= U_{G} (t) \bigotimes U_{H} (t)&lt;/script&gt;

&lt;p&gt;as desired.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Note that here &lt;script type=&quot;math/tex&quot;&gt;A_{G \Box H}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;A_G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;A_H&lt;/script&gt; denote the respective adjacency matrices of &lt;script type=&quot;math/tex&quot;&gt;G \Box H&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;H&lt;/script&gt;; likewise &lt;script type=&quot;math/tex&quot;&gt;U_{G \Box H}(t)&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;U_G (t)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;U_H (t)&lt;/script&gt; denote their respective continuous-time quantum walks relative to their adjacency matrices.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;After showing that my previous proposition is true, we ultimately have that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Cartesian products of simple graphs that admit the property known as perfect state transfer at the same time also admit perfect state transfer at the same time.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Cartesian products of simple graphs that admit uniform mixing at the same time also admit uniform mixing at the same time, assuming that the simple graphs in context have the same number of vertices.
as desired.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><summary type="html">In this post, my goals are to:</summary></entry><entry><title type="html">Spectral Decompositions of Adjacency Matrices</title><link href="http://localhost:4000/2016/09/05/spectral-decompositions-of-adjacency-matrices.html" rel="alternate" type="text/html" title="Spectral Decompositions of Adjacency Matrices" /><published>2016-09-05T00:00:00-04:00</published><updated>2016-09-05T00:00:00-04:00</updated><id>http://localhost:4000/2016/09/05/spectral-decompositions-of-adjacency-matrices</id><content type="html" xml:base="http://localhost:4000/2016/09/05/spectral-decompositions-of-adjacency-matrices.html">&lt;p&gt;In this post, my goal is to establish why the adjacency matrix of a simple graph has its spectral decomposition; in my previous posts up until this point, I have relied on the fact that the adjacency matrix of a simple graph has its spectral decomposition, and related facts, without examining or justifying that these facts are true directly. Stated more precisely, my goal for this post is to justify that the adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of any simple graph has the spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_\lambda&lt;/script&gt;, where &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; denotes the set of distinct eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;E_\lambda&lt;/script&gt; denotes an orthogonal projection onto the eigenspace of &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;. It turns out that the adjacency matrix of a simple graph has its spectral decomposition because it is a real symmetric matrix, and any real symmetric matrix has its spectral decomposition; so, I would like to focus somewhat more generally on establishing why any real symmetric matrix has a spectral decomposition, despite the spectral decomposition of the adjacency matrix of a simple graph being of particular relevance to the current subject matter of this blog.&lt;/p&gt;

&lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; is a &lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;d&lt;/script&gt; real symmetric matrix. Then, in this context, I would propose that:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;The minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into linear factors; moreover, each of its linear factors are distinct.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the minimal polynomial &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into distinct linear factors as &lt;script type=&quot;math/tex&quot;&gt;p(x) = \sum\limits_{k = 1}^{n} (x - \lambda_k)&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(A - \lambda_k I) = \operatorname{image}(q_k(A))&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;q_k(x) := (x - \lambda_k)^{-1}p(x)&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If the minimal polynomial &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into distinct linear factors as &lt;script type=&quot;math/tex&quot;&gt;p(x) = \sum\limits_{k = 1}^{n} (x - \lambda_k)&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;E_k&lt;/script&gt; denotes an orthogonal projection onto the eigenspace of eigenvalue &lt;script type=&quot;math/tex&quot;&gt;\lambda_k&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; eigenvalue where &lt;script type=&quot;math/tex&quot;&gt;E_k := (q_k(\lambda_k))^{-1} q_k(A)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;q_k(x) := (x - \lambda_k)^{-1}p(x)&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;; moreover, &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{k=1}^{n} E_k = I&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Assuming that these three propositions hold in this context, then it is clear that &lt;script type=&quot;math/tex&quot;&gt;A = A(I) = A \left(\sum\limits_{k=1}^{n} E_k \right) = \sum\limits_{k=1}^{n} A E_k = \sum\limits_{k=1}^{n} \lambda_k E_k&lt;/script&gt;, and hence has its spectral decomposition as desired.
I would now like to show that these three propositions, necessary to deduce that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; has its spectral decomposition, are indeed true in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;If &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; is a real symmetric matrix, then it can also be interpreted as a Hermitian matrix whose entries all happen to be real. It turns out that for any Hermitian matrix, all of its eigenvalues are real. Hence, not only does the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; interpreted as a Hermitian matrix split into linear factors, as does the minimal polynomial of any matrix with entries in an algebraically closed field such as the field of complex numbers, but moreover all of its roots are real. Ultimately, since all of the roots of the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; interpreted as a Hermitian are real, then it is guaranteed that the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; viewed as a real symmetric matrix will split into linear factors as well (without needing to extend the field that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; takes entries in to include the complex numbers). Therefore, the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into linear factors, as desired.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Now, suppose that &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; is any eigenvalue of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; such that&lt;script type=&quot;math/tex&quot;&gt;(x - \lambda)^2&lt;/script&gt; divides the minimal polynomial &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, and that &lt;script type=&quot;math/tex&quot;&gt;p(x) = (x - \lambda)^2 q(x)&lt;/script&gt;. Then, for any vector &lt;script type=&quot;math/tex&quot;&gt;v \in \mathbb{R}^{d}&lt;/script&gt; , &lt;script type=&quot;math/tex&quot;&gt;\langle (A - \lambda I)^2 q(A)v, q(A)v \rangle = \langle (A - \lambda I)q(A)v, (A - \lambda I)q(A)v \rangle = 0&lt;/script&gt; since &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; is symmetric and hence self-adjoint; and, by properties of inner products, this implies&lt;script type=&quot;math/tex&quot;&gt;(A - \lambda I)q(A)v = 0&lt;/script&gt;, which means that in fact &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; cannot be the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; as assumed since &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; is arbitrary. It follows that there cannot be any eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; such that &lt;script type=&quot;math/tex&quot;&gt;(x - \lambda)^{2}&lt;/script&gt; divides the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Hence, not only does the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; split into linear factors, but moreover all of the factors of the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; are distinct.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Assume that the minimal polynomial &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into distinct linear factors as &lt;script type=&quot;math/tex&quot;&gt;p(x) = \sum\limits_{k = 1}^{n} (x - \lambda_k)&lt;/script&gt;, and select any particular &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Firstly, select any eigenvector &lt;script type=&quot;math/tex&quot;&gt;v \in \operatorname{null}(A - \lambda_k I)&lt;/script&gt; for &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; with eigenvalue &lt;script type=&quot;math/tex&quot;&gt;\lambda_k&lt;/script&gt;. It turns out that since &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; is an eigenvector for &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; will be an eigenvector for any polynomial in &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; as well; in particular, in this context it turns out that &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; is an eigenvector for &lt;script type=&quot;math/tex&quot;&gt;q_k(A)&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;q_k(x) := (x - \lambda_k)^{-1}p(x)&lt;/script&gt;, since &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; is an eigenvector for &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;q_k(A)&lt;/script&gt; is a polynomial in &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Furthermore, in this context &lt;script type=&quot;math/tex&quot;&gt;v = \sum\limits_{c = 1}^{d} a_c e_c&lt;/script&gt; for coefficients &lt;script type=&quot;math/tex&quot;&gt;a_c \in \mathbb{R}&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq c \leq d&lt;/script&gt;, because &lt;script type=&quot;math/tex&quot;&gt;v \in \operatorname{null}(A - \lambda_k I)&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(A - \lambda_k I)&lt;/script&gt; is a subspace of &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^{d}&lt;/script&gt;. Hence &lt;script type=&quot;math/tex&quot;&gt;q_k(A)\left ( \sum\limits_{c = 1}^{d} a_c e_c \right ) = \sum\limits_{c = 1}^{d} a_c \left ( q_k(A) e_c \right) = q_k(\lambda_k)v&lt;/script&gt;, which ultimately implies that &lt;script type=&quot;math/tex&quot;&gt;v \in \operatorname{image}(q_k(A))&lt;/script&gt; since &lt;script type=&quot;math/tex&quot;&gt;\operatorname{image}(q_k(A)) = \operatorname{span}\left \{ q_k(A)e_c : 1 \leq c \leq d \right \}&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v = \sum\limits_{c = 1}^d (q_k(\lambda_k)^{-1} a_c \left( q_k(A)e_c \right )&lt;/script&gt;. Therefore &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(A - \lambda_k I) \subseteq \operatorname{image}(q_k(A))&lt;/script&gt; since &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; is arbitrary.&lt;/p&gt;

&lt;p&gt;Now, select any vector &lt;script type=&quot;math/tex&quot;&gt;w \in \operatorname{image}(q_k(A))&lt;/script&gt; (where &lt;script type=&quot;math/tex&quot;&gt;q_k(x) := (x - \lambda_k)^{-1}p(x)&lt;/script&gt; as in the previous subcontext); this implies that &lt;script type=&quot;math/tex&quot;&gt;w = q_k(A)x&lt;/script&gt; for some &lt;script type=&quot;math/tex&quot;&gt;x \in \mathbb{R}^{d}&lt;/script&gt;. Clearly, &lt;script type=&quot;math/tex&quot;&gt;p(A)x = (A - \lambda_k I)q_k(A)x = 0&lt;/script&gt;, because &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; is the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Since &lt;script type=&quot;math/tex&quot;&gt;(A - \lambda_k I)\left( q_k(A)x \right ) = (A - \lambda_k I)w = 0&lt;/script&gt;, it follows that &lt;script type=&quot;math/tex&quot;&gt;w \in \operatorname{null}(A - \lambda_k I)&lt;/script&gt;. Therefore &lt;script type=&quot;math/tex&quot;&gt;\operatorname{image}(q_k(A)) \subseteq \operatorname{null}(A - \lambda_k I)&lt;/script&gt; since &lt;script type=&quot;math/tex&quot;&gt;w&lt;/script&gt; is arbitrary.&lt;/p&gt;

&lt;p&gt;Hence, &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(A - \lambda_k I) = \operatorname{image}(q_k(A))&lt;/script&gt; as desired, since &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(A - \lambda_k I) \subseteq \operatorname{image}(q_k(A))&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\operatorname{image}(q_k(A)) \subseteq \operatorname{null}(A - \lambda_k I)&lt;/script&gt;. Therefore, it ultimately follows that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(A - \lambda_j I) = \operatorname{image}(q_j(A))&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq n&lt;/script&gt; since &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; is arbitrary as well.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;As in the previous subcontext, assume that the minimal polynomial &lt;script type=&quot;math/tex&quot;&gt;p(x)&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; splits into distinct linear factors as &lt;script type=&quot;math/tex&quot;&gt;p(x) = \sum\limits_{k = 1}^{n} (x - \lambda_k)&lt;/script&gt;, and select any particular &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; where &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;. Now, select any vector &lt;script type=&quot;math/tex&quot;&gt;v \in \operatorname{null}(A - \lambda_k I) = \operatorname{image}(E_k)&lt;/script&gt;: it is straightforward to verify that &lt;script type=&quot;math/tex&quot;&gt;E_k v = q_k(\lambda_k)^{-1} q_k(A) v = q_k(\lambda_k)^{-1} q_k(\lambda_k) v = v&lt;/script&gt;, and furthermore that &lt;script type=&quot;math/tex&quot;&gt;E_k^{2} v = E_k (E_k v) = E_k v = v&lt;/script&gt;. It turns out that &lt;script type=&quot;math/tex&quot;&gt;\operatorname{null}(E_k) = \operatorname{image}^{\perp}(E_k) = \operatorname{null}^{\perp}(A - \lambda_k I)&lt;/script&gt;, since eigenvectors with distinct eigenvalues are orthogonal for any real symmetric such as &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;; please see e.g. my Quora answer (http://1. How do I prove that eigenvectors corresponding to distinct eigenvalues of a real symmetric matrix are orthogonal? (https://www.quora.com/How-do-I-prove-that-eigenvectors-corresponding-to-distinct-eigenvalues-of-a-real-symmetric-matrix-are-orthogonal)) on the matter for a further justification of this fact. Hence &lt;script type=&quot;math/tex&quot;&gt;E_k&lt;/script&gt; is an orthogonal projection. Therefore, it ultimately follows that each &lt;script type=&quot;math/tex&quot;&gt;E_j&lt;/script&gt; is an orthogonal projection for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq n&lt;/script&gt; as desired, since the choice of &lt;script type=&quot;math/tex&quot;&gt;k&lt;/script&gt; here is arbitrary.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Lastly, it turns out that the set of polynomials &lt;script type=&quot;math/tex&quot;&gt;S = \left \{ q_k(\lambda_k))^{-1} q_k(x) : 1 \leq k \leq n \right \}&lt;/script&gt;is coprime. Since &lt;script type=&quot;math/tex&quot;&gt;S&lt;/script&gt; is a set of coprime polynomials in &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}[x]&lt;/script&gt;, it follows from the analogue of Bézout’s identity for polynomials in &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}[x]&lt;/script&gt; that &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{k=1}^{n} a_k(x) \left( q_k(\lambda_k))^{-1} q_k(x) \right) = 1&lt;/script&gt; for some polynomials &lt;script type=&quot;math/tex&quot;&gt;a_k(x) \in \mathbb{R}[x]&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq k \leq n&lt;/script&gt;; this implies that &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{k=1}^{n} a_k(A) \left( q_k(\lambda_k))^{-1} q_k(x) \right) = \sum\limits_{k=1}^{n} a_k(A) E_k = I&lt;/script&gt;. Moreover, we have that for all &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq n&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;E_j \left( \sum\limits_{k=1}^{n} a_k(A) E_k \right) = a_j(A) E_j^{2} = E_j&lt;/script&gt;; this implies that &lt;script type=&quot;math/tex&quot;&gt;a_j(A) = 1&lt;/script&gt; for &lt;script type=&quot;math/tex&quot;&gt;1 \leq j \leq n&lt;/script&gt; since each &lt;script type=&quot;math/tex&quot;&gt;E_j&lt;/script&gt; is idempotent. Therefore, it ultimately follows that &lt;script type=&quot;math/tex&quot;&gt;\sum\limits_{k=1}^{n} E_k = I&lt;/script&gt; as desired.
In conclusion, it follows that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; indeed has its spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{k = 1}^{n} \lambda_k E_k&lt;/script&gt; as desired, since the three propositions needed to establish that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; has its spectral decomposition have been shown to hold in this context. Therefore, any real symmetric matrix has its spectral decomposition as desired, since &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; arbitrary; and hence the adjacency matrix of any simple graph has its spectral decomposition as desired, since adjacency matrices of simple graphs are just special instances of real symmetric matrices.&lt;/p&gt;</content><summary type="html">In this post, my goal is to establish why the adjacency matrix of a simple graph has its spectral decomposition; in my previous posts up until this point, I have relied on the fact that the adjacency matrix of a simple graph has its spectral decomposition, and related facts, without examining or justifying that these facts are true directly. Stated more precisely, my goal for this post is to justify that the adjacency matrix  of any simple graph has the spectral decomposition , where  denotes the set of distinct eigenvalues of , and  denotes an orthogonal projection onto the eigenspace of  for all . It turns out that the adjacency matrix of a simple graph has its spectral decomposition because it is a real symmetric matrix, and any real symmetric matrix has its spectral decomposition; so, I would like to focus somewhat more generally on establishing why any real symmetric matrix has a spectral decomposition, despite the spectral decomposition of the adjacency matrix of a simple graph being of particular relevance to the current subject matter of this blog.</summary></entry><entry><title type="html">Strongly Regular Graphs Are Walk-Regular</title><link href="http://localhost:4000/2016/08/20/strongly-regular-graphs-are-walk-regular.html" rel="alternate" type="text/html" title="Strongly Regular Graphs Are Walk-Regular" /><published>2016-08-20T00:00:00-04:00</published><updated>2016-08-20T00:00:00-04:00</updated><id>http://localhost:4000/2016/08/20/strongly-regular-graphs-are-walk-regular</id><content type="html" xml:base="http://localhost:4000/2016/08/20/strongly-regular-graphs-are-walk-regular.html">&lt;p&gt;In this post, my goal is to show that strongly regular graphs are walk-regular.
I would like to start off by stating what it means for a simple graph to be walk-regular, as well as what it means for a simple graph to be strongly regular:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;A simple graph is said to be &lt;em&gt;walk-regular&lt;/em&gt; if all of its vertices are cospectral.&lt;/li&gt;
  &lt;li&gt;A simple graph is said to be &lt;em&gt;strongly regular&lt;/em&gt; if it is: regular, every pair of adjacent vertices share the same number of neighbours in common, and every pair of non-adjacent vertices share the same number of neighbours in common - with the exception of the complete graphs, as well as the empty graph.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is a strongly regular graph on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices with adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;.
Firstly, I would like to assume, for the purposes of this blog post, some standard facts about &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; that must hold in this context:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;The adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; satisfies &lt;script type=&quot;math/tex&quot;&gt;A^2 = \alpha I + \beta A + \gamma \overline{A}&lt;/script&gt; for some non-negative integers &lt;script type=&quot;math/tex&quot;&gt;\alpha,\beta,\gamma&lt;/script&gt; (where &lt;script type=&quot;math/tex&quot;&gt;\beta&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;\gamma&lt;/script&gt; are both not equal to &lt;script type=&quot;math/tex&quot;&gt;0&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; is also non-zero).&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that here &lt;script type=&quot;math/tex&quot;&gt;\overline{A}&lt;/script&gt; denotes the adjacency matrix of the complement of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;, which is explicitly defined as &lt;script type=&quot;math/tex&quot;&gt;\overline{A} := J - I - A&lt;/script&gt; (where &lt;script type=&quot;math/tex&quot;&gt;J&lt;/script&gt; denotes the matrix that consists entirely of &lt;script type=&quot;math/tex&quot;&gt;1&lt;/script&gt;s as entries).&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;The adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has three distinct eigenvalues, i.e. &lt;script type=&quot;math/tex&quot;&gt;\mid\sigma(A)\mid = 3&lt;/script&gt;. In particular, &lt;script type=&quot;math/tex&quot;&gt;E_\lambda = c_\lambda(A^2 - c_{\lambda}^{'}A - c_{\lambda}^{''}I)&lt;/script&gt; for some &lt;script type=&quot;math/tex&quot;&gt;c_{\lambda}, c_{\lambda}^{'}, c_{\lambda}^{''}&lt;/script&gt; and all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;; i.e. each &lt;script type=&quot;math/tex&quot;&gt;E_\lambda&lt;/script&gt; is some constant multiple of a monic polynomial of degree &lt;script type=&quot;math/tex&quot;&gt;2&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that here, as in my previous blog post, each &lt;script type=&quot;math/tex&quot;&gt;E_\lambda&lt;/script&gt; denotes an orthogonal projection onto the eigenspace for eigenvalue &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt; of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, for all eigenvalues &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;.
As in my previous blog post, I would also like to define an inner product on &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^{n}&lt;/script&gt; as &lt;script type=&quot;math/tex&quot;&gt;\langle x,y \rangle := x^T y&lt;/script&gt; for all vectors &lt;script type=&quot;math/tex&quot;&gt;x,y \in \mathbb{R}^{n}&lt;/script&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Now, I would like to propose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is walk-regular, and would also like to show that this proposition holds in this context:
Consider any vertex &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; and any &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;. Then, from properties of inner products:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\langle E_\lambda e_u, e_u \rangle&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \langle c_\lambda (A^2 - c_{\lambda}^{'}A - c_{\lambda}^{''}I)e_u, e_u \rangle&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= c_\lambda\langle (A^2 - c_{\lambda}^{'}A - c_{\lambda}^{''}I)e_u, e_u \rangle&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;From there, it is possible to further deduce that:&lt;/p&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\langle (A^2 - c_{\lambda}^{'}A - c_{\lambda}^{''}I)e_u, e_u \rangle&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \langle A^2 e_u, e_u \rangle - c_{\lambda}^{'} \langle Ae_u, e_u \rangle - c_{\lambda}^{''} \langle e_u, e_u \rangle&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \langle A^2 e_u, e_u \rangle - c_{\lambda}^{''}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \langle (\alpha I + \beta A + \gamma \overline{A}) e_u, e_u \rangle - c_{\lambda}^{''}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \alpha \langle e_u, e_u \rangle + \beta \langle Ae_u, e_u\rangle + \gamma \langle \overline{A}e_u, e_u \rangle - c_{\lambda}^{''}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \alpha + \gamma \langle \overline{A}e_u, e_u \rangle - c_{\lambda}^{''}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \alpha + \gamma \langle (J - I - A)e_u, e_u \rangle - c_{\lambda}^{''}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \alpha + \gamma(\langle J e_u, e_u \rangle - \langle e_u, e_u \rangle - \langle A e_u, e_u \rangle) - c_{\lambda}^{''}&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \alpha - c_{\lambda}^{''}&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Therefore, &lt;script type=&quot;math/tex&quot;&gt;\langle E_\lambda e_u, e_u \rangle = c_\lambda(\alpha - c_{\lambda}^{''})&lt;/script&gt;, which is independent of the choice of &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; as a vertex. It ultimately follows that any pair of distinct vertices on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are cospectral, and therefore &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is walk-regular.
Since &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is an arbitrary strongly regular graph, it is possible to conclude that every strongly regular graph is walk-regular. Hence, in this blog post, it is possible to conclude that every pair of distinct vertices on a strongly regular graph meet at least one of the necessary conditions for said vertices to admit the property known as perfect state transfer. However, it somewhat unfortunately turns out that it appears to be much rarer for strongly regular graphs to meet a stronger condition that a pair of distinct vertices must have to admit perfect state transfer, known as being strongly cospectral; I hope to examine the more specialized problem of systematically finding strongly regular graphs with strongly cospectral vertices in a future blog post.&lt;/p&gt;</content><summary type="html">In this post, my goal is to show that strongly regular graphs are walk-regular.
I would like to start off by stating what it means for a simple graph to be walk-regular, as well as what it means for a simple graph to be strongly regular:

  A simple graph is said to be walk-regular if all of its vertices are cospectral.
  A simple graph is said to be strongly regular if it is: regular, every pair of adjacent vertices share the same number of neighbours in common, and every pair of non-adjacent vertices share the same number of neighbours in common - with the exception of the complete graphs, as well as the empty graph.</summary></entry><entry><title type="html">Closed Walks and Cospectral Vertices</title><link href="http://localhost:4000/2016/08/19/closed-walks-and-cospectral-vertices.html" rel="alternate" type="text/html" title="Closed Walks and Cospectral Vertices" /><published>2016-08-19T00:00:00-04:00</published><updated>2016-08-19T00:00:00-04:00</updated><id>http://localhost:4000/2016/08/19/closed-walks-and-cospectral-vertices</id><content type="html" xml:base="http://localhost:4000/2016/08/19/closed-walks-and-cospectral-vertices.html">&lt;p&gt;If a pair of distinct vertices on a simple graph admit perfect state transfer with respect to the continuous-time quantum walk of its adjacency matrix, then it is a necessary condition that said vertices have the property known as being cospectral. In this post, my goal is to provide some useful characterizations of cospectrality, and provide some useful sufficient conditions for a pair of distinct vertices to be cospectral on a simple graph.&lt;/p&gt;

&lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; is a simple graph on &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices, with adjacency matrix &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Then, I would like to provide some definitions in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;An inner product can be defined on &lt;script type=&quot;math/tex&quot;&gt;\mathbb{R}^{n}&lt;/script&gt; as &lt;script type=&quot;math/tex&quot;&gt;\langle x,y \rangle := x^T y&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;x,y \in \mathbb{R}^{n}&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Let &lt;script type=&quot;math/tex&quot;&gt;\sigma(A)&lt;/script&gt; denote the set of all distinct eigenvalues of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. If for any pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; we have that &lt;script type=&quot;math/tex&quot;&gt;\langle E_\lambda e_u, e_u \rangle = \langle E_\lambda e_v, e_v \rangle&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; are said to be cospectral.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that here each &lt;script type=&quot;math/tex&quot;&gt;E_\lambda&lt;/script&gt; denotes an orthogonal projection onto the eigenspace for eigenvalue &lt;script type=&quot;math/tex&quot;&gt;\lambda&lt;/script&gt;&lt;/em&gt; of &lt;em&gt;&lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; is any vertex on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. Then closed walk generating series of &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; is defined as: &lt;script type=&quot;math/tex&quot;&gt;W_u(X) := \sum\limits_{k=0}^{\infty} \langle A^n e_u, e_u \rangle X^n&lt;/script&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;em&gt;Note that &lt;script type=&quot;math/tex&quot;&gt;W_u(X) \in \mathbb{R} \left[ \left[ X \right] \right]&lt;/script&gt;, i.e. it is an element of the algebra of formal power series with real coefficients.&lt;/em&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; has &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; vertices, and &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; is a vertex on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. Then the walk matrix &lt;script type=&quot;math/tex&quot;&gt;B_u&lt;/script&gt; relative to vertex &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; is defined as &lt;script type=&quot;math/tex&quot;&gt;B_u := \left( e_u \mid A e_u \mid \cdots \mid A^{n-1} e_u \right)&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;If &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt; is an &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; x &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt; permutation matrix that commutes with &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, i.e. &lt;script type=&quot;math/tex&quot;&gt;AP = PA&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt; is said to represent an automorphism on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;And, I would like to state some propositions in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Any pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are cospectral if and only if their closed walk generating series are equal, i.e. &lt;script type=&quot;math/tex&quot;&gt;W_u(X) = W_v(X).&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Any pair of distinct &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are cospectral if and only if &lt;script type=&quot;math/tex&quot;&gt;(B_u)^T B_u = (B_v)^T B_v.&lt;/script&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Suppose that a permutation matrix &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt; represents an automorphism on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. If for any pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;P e_u = e_v&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;P e_v = e_u&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; are cospectral.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Finally, I would like to show that these propositions hold in this context:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Suppose that a pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are cospectral, and that &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; has spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A = \sum\limits_{\lambda \in \sigma(A)} \lambda E_\lambda&lt;/script&gt;. Then for all non-negative integers &lt;script type=&quot;math/tex&quot;&gt;k \geq 0,&lt;/script&gt; &lt;script type=&quot;math/tex&quot;&gt;A^k&lt;/script&gt; has spectral decomposition &lt;script type=&quot;math/tex&quot;&gt;A^k = \sum\limits_{\lambda \in \sigma(A)} \lambda^k E_\lambda&lt;/script&gt;. From properties of inner products, it follows that if for all &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\langle E_\lambda e_u, e_u \rangle = \langle E_\lambda e_v, e_v \rangle&lt;/script&gt;, then &lt;script type=&quot;math/tex&quot;&gt;\langle A^k e_u, e_u \rangle = \langle A^k e_v, e_v \rangle&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt;. Hence if &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; are cospectral, then their closed walk generating series are equal.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conversely, suppose that a pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; have closed walk generating series, i.e. &lt;script type=&quot;math/tex&quot;&gt;W_u(X) = W_v(X)&lt;/script&gt;. In particular, this means that for all non-negative integers &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\langle A^k e_u, e_u \rangle = \langle A^k e_v, e_v \rangle&lt;/script&gt;. It follows from properties of inner products that for all polynomials &lt;script type=&quot;math/tex&quot;&gt;f(A)&lt;/script&gt; in &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;, i.e. &lt;script type=&quot;math/tex&quot;&gt;f(x)&lt;/script&gt; is a polynomial with real coefficients and &lt;script type=&quot;math/tex&quot;&gt;f(A) \in Z(A) = \mathrm{span} \{ I, A, A^2, \cdots \}&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\langle f(A) e_u, e_u \rangle = \langle f(A) e_v, e_v \rangle&lt;/script&gt;. It is also the case that each &lt;script type=&quot;math/tex&quot;&gt;E_\lambda&lt;/script&gt; is a polynomial in &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; for all eigenvalues &lt;script type=&quot;math/tex&quot;&gt;\lambda \in \sigma(A)&lt;/script&gt;, as can be seen in the proof of the establishment of the spectral decomposition of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt;. Hence it ultimately follows that if &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; have equal closed walk generating series, then &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; are cospectral.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Suppose that a pair of distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt;on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; are cospectral. By the previous proposition, this means that they also have equal closed walk generating series - which means that for all non-negative integers &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\langle A^k e_u, e_u \rangle = \langle A^k e_v, e_v \rangle&lt;/script&gt;. Observe that any entry in &lt;script type=&quot;math/tex&quot;&gt;(B_u)^T B_u&lt;/script&gt; is of the form &lt;script type=&quot;math/tex&quot;&gt;\langle A^j e_u, e_u \rangle&lt;/script&gt; for some non-negative integer &lt;script type=&quot;math/tex&quot;&gt;j&lt;/script&gt;. Hence it follows that &lt;script type=&quot;math/tex&quot;&gt;(B_u)^T B_u = (B_v)^T B_v&lt;/script&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Conversely, suppose that &lt;script type=&quot;math/tex&quot;&gt;(B_u)^T B_u = (B_v)^T B_v&lt;/script&gt;. Observe, by looking at the first columns of these matrices, that &lt;script type=&quot;math/tex&quot;&gt;\langle A^j e_u, e_u \rangle = \langle A^j e_v, e_v \rangle&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;0 \leq j \leq n - 1&lt;/script&gt;. The degree of the minimal polynomial of &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; must be less than or equal to &lt;script type=&quot;math/tex&quot;&gt;n&lt;/script&gt;, since it wouldn’t make sense for &lt;script type=&quot;math/tex&quot;&gt;A&lt;/script&gt; to have more distinct eigenvalues than it has vertices. Hence for all &lt;script type=&quot;math/tex&quot;&gt;k \geq n&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;A^k&lt;/script&gt; can be expressed as a linear combination of &lt;script type=&quot;math/tex&quot;&gt;I, A, \cdots&lt;/script&gt;, and &lt;script type=&quot;math/tex&quot;&gt;A^{n-1}&lt;/script&gt;. It ultimately follows, from properties of inner products, that for all &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;\langle A^k e_u, e_u \rangle = \langle A^k e_v, e_v \rangle&lt;/script&gt;; which means that &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; have equal closed walk generating series, and hence they are cospectral.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Suppose that &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt; is a permutation matrix that represents an automorphism on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt; that swaps distinct vertices &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;. Since &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt; represents an automorphism on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;, this means that &lt;script type=&quot;math/tex&quot;&gt;AP = PA&lt;/script&gt;. It follows that for all non-negative integers &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt;, &lt;script type=&quot;math/tex&quot;&gt;A^k P = P A^k&lt;/script&gt; as well. Furthermore, it follows that for all &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt; and all vertices &lt;script type=&quot;math/tex&quot;&gt;\alpha&lt;/script&gt; on &lt;script type=&quot;math/tex&quot;&gt;G&lt;/script&gt;,&lt;/li&gt;
&lt;/ol&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;\langle A^k e_\alpha, e_\alpha \rangle&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (e_\alpha)^T A^k e_\alpha&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (e_\alpha)^T (P^T A^k P) e_\alpha&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= ((e_\alpha)^T P^T) A^k (P e_\alpha)&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= (P e_\alpha)^T (A^k (P e_\alpha))&lt;/script&gt;

&lt;script type=&quot;math/tex; mode=display&quot;&gt;= \langle A^k (Pe_\alpha), (Pe_\alpha) \rangle&lt;/script&gt;

&lt;p&gt;.&lt;/p&gt;

&lt;p&gt;Hence if &lt;script type=&quot;math/tex&quot;&gt;P&lt;/script&gt; sends &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; to &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; , i.e. &lt;script type=&quot;math/tex&quot;&gt;Pe_u = e_v&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;Pe_v = e_u&lt;/script&gt;, then in particular &lt;script type=&quot;math/tex&quot;&gt;\langle A^k e_u, e_u \rangle = \langle A^k (Pe_u), (Pe_u) \rangle = \langle A^k e_v, e_v \rangle&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;k \geq 0&lt;/script&gt;; which means that the closed walk generating series of &lt;script type=&quot;math/tex&quot;&gt;u&lt;/script&gt; and &lt;script type=&quot;math/tex&quot;&gt;v&lt;/script&gt; are equal, and therefore they are cospectral.&lt;/p&gt;

&lt;p&gt;These characterizations of cospectrality, and sufficient conditions for a pair of distinct vertices on a simple graph to be cospectral, can serve as a useful toolkit for finding cospectral vertices on particular simple graphs. For example, the automorphism group of any path graph is a cyclic group of order two, which is always generated by a single permutation that swaps its ends in particular; it follows, from the work above in this blog post, that the ends of any path are always cospectral. As an another example, the same work can be applied to determine that any pair of non-central vertices of any star graph are cospectral (for star graphs &lt;script type=&quot;math/tex&quot;&gt;K(1,n)&lt;/script&gt; for all &lt;script type=&quot;math/tex&quot;&gt;n \geq 2&lt;/script&gt;). It is also possible to find closed forms for the closed walk generating series for non-central vertices of star graphs, and find that any pair of non-central vertices on a star graph are cospectral since they have equal closed walk generating series are hence cospectral; the same strategy can applied to again determine that the ends of any path are cospectral. However, cospectrality is only a neccessary (but not sufficient) condition for a pair of distinct vertices on a simple graph to admit the property known as perfect state transfer on a simple graph, which I was initially interested in investigating; I hope to discuss other necessary conditions, and ultimately all sufficient conditions, for perfect state transfer to occur between a pair of distinct vertices on a simple graph in future blogs, as I investigate and learn about them.&lt;/p&gt;</content><summary type="html">If a pair of distinct vertices on a simple graph admit perfect state transfer with respect to the continuous-time quantum walk of its adjacency matrix, then it is a necessary condition that said vertices have the property known as being cospectral. In this post, my goal is to provide some useful characterizations of cospectrality, and provide some useful sufficient conditions for a pair of distinct vertices to be cospectral on a simple graph.</summary></entry></feed>
